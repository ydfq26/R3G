name:  quan5（区别多线程，改进ssh，复制config）

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

jobs:
  build:
    name: Build OpenWrt Firmware
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout OpenWrt Repository
        uses: actions/checkout@v2

      - name: Update System Packages
        run: sudo apt-get update && sudo apt-get upgrade -y

     # - name: 安装依赖
      #  run: |
       #   sudo apt install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential \
        #  bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
      #    git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
       #   libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
       #   mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils \
       #   rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

      - name: 克隆代码
        run: |
          git clone https://github.com/coolsnowwolf/lede
           
      - name: 打印当前目录文件
        run: |
          ls -al
     
      - name: 执行diy1脚本
        run: |
         cd lede
         chmod +x /home/runner/work/R3G/R3G/quan1.sh
         bash /home/runner/work/R3G/R3G/quan1.sh
         
      - name: 更新安装插件
        run: |
          cd lede
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: 配置config
        run: |
          cd lede
          cp /home/runner/work/R3G/R3G/quan.config .config
          make defconfig
          # make menuconfig


      - name: SSH connection to Actions
        uses: R3G/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
           TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
           TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

           
      - name: 执行diy2脚本
        run: |
          cd lede
           chmod +x /home/runner/work/R3G/R3G/diy2.sh
            bash /home/runner/work/R3G/R3G/diy2.sh
      - name: 复制.config文件到根目录
        run: |
          cp /home/runner/work/R3G/R3G/lede/.config /home/runner/work/R3G/R3G/
          
      - name: 下载dl
        run: |
          cd lede
          make download -j8 V=s
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          
      - name: 开始编译
        run: |
          cd lede
          # nproc 表示自动计算出你用编译机器的内核线程数
          # -j$(nproc) 表示以编译机器的内核线程数编译。
          make -j$(nproc) V=s
      - name: 上传固件
        uses: actions/upload-artifact@v2
        with:
          name: openwrt-firmware
          path: lede/bin

      - name: 上传.config文件
        uses: actions/upload-artifact@v2
        with:
          name: openwrt-config
          path: lede/.config

      - name: 打包并上传dl文件夹
        run: |
          cd lede
          tar -czf dl.tar.gz dl
          uses: actions/upload-artifact@v2
          with:
          name: openwrt-dl
          path: lede/dl.tar.gz
